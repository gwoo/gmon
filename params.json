{"name":"Gmon","tagline":"Go program for server monitoring.","body":"GMon\r\n====\r\n\r\nGMon is a Go program to monitor and distribute metrics associated with any\r\nsystem. A preferred use case is the ability to capture cpu and memory usage\r\nin elastic search to be used with Kibana.\r\n\r\nRunning\r\n-------\r\n./gmon\r\n\r\n\tUsage of ./gmon:\r\n\t  -conf=\"gmon.json\": Path to config file.\r\n\t  -handlers=\"stdout\": Comma seperate list of handlers. ex: elasticseach,stdout.\r\n\t  -path=\"scripts\": Path to scripts directory.\r\n\r\n\r\nExample Metrics\r\n---------------\r\nSymlink [gmon-scripts](https://github.com/gwoo/gmon-scripts) into a `scripts`\r\ndirectory in the current directory where `gmon` is installed. Or pass\r\nan absolute path to the scripts directory.\r\n\r\n\r\nCreating Metrics\r\n----------------\r\nA metric is a script in any language that outputs in a standardized format\r\nthat GMon can understand. The format is a simple space seperated list of values.\r\n\r\n\t<name>|<value>|<message>|<tag1> <tag2> <tagN>\r\n\r\nYou can have any number of tags after the message. If you do not want a\r\nmessage you can use two spaces. Both the message and tags are optional.\r\n\r\n\r\nCreating Handlers\r\n-----------------\r\nA Handler is a Go interface. The interface has a store method that receives\r\na slice of Metrics. Have a look at handles/main.go. GMon ships with two\r\nhandlers, Elasticsearch and Stdout. You can add your own or contribute them\r\nback to the project.\r\n\r\n#### Dependencies\r\ngo get github.com/mattbaird/elastigo","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}